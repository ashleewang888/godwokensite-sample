"use strict";(self.webpackChunkgodwokensite_sample=self.webpackChunkgodwokensite_sample||[]).push([[2175],{3905:(n,e,t)=>{t.d(e,{Zo:()=>u,kt:()=>c});var a=t(7294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,a,r=function(n,e){if(null==n)return{};var t,a,r={},o=Object.keys(n);for(a=0;a<o.length;a++)t=o[a],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(a=0;a<o.length;a++)t=o[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var p=a.createContext({}),l=function(n){var e=a.useContext(p),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},u=function(n){var e=l(n.components);return a.createElement(p.Provider,{value:e},n.children)},d={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},y=a.forwardRef((function(n,e){var t=n.components,r=n.mdxType,o=n.originalType,p=n.parentName,u=s(n,["components","mdxType","originalType","parentName"]),y=l(t),c=r,m=y["".concat(p,".").concat(c)]||y[c]||d[c]||o;return t?a.createElement(m,i(i({ref:e},u),{},{components:t})):a.createElement(m,i({ref:e},u))}));function c(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var o=t.length,i=new Array(o);i[0]=y;var s={};for(var p in e)hasOwnProperty.call(e,p)&&(s[p]=e[p]);s.originalType=n,s.mdxType="string"==typeof n?n:r,i[1]=s;for(var l=2;l<o;l++)i[l]=t[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}y.displayName="MDXCreateElement"},910:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=t(7462),r=(t(7294),t(3905));t(4996);const o={id:"tokens",title:"Tokens"},i=void 0,s={unversionedId:"tokens",id:"version-1.2-rc1(WIP)/tokens",title:"Tokens",description:"On this page you can find test tokens deployed on Godwoken Testnet that you can use to experiment.",source:"@site/versioned_docs/version-1.2-rc1(WIP)/tokens.md",sourceDirName:".",slug:"/tokens",permalink:"/godwokensite-sample/tokens",draft:!1,tags:[],version:"1.2-rc1(WIP)",frontMatter:{id:"tokens",title:"Tokens"},sidebar:"sidebar2",previous:{title:"Wallets",permalink:"/godwokensite-sample/wallets"},next:{title:"Godwoken Transaction",permalink:"/godwokensite-sample/gwtxLife"}},p={},l=[{value:"Claimable Test ERC20 Token",id:"claimable-test-erc20-token",level:3}],u={toc:l};function d(n){let{components:e,...t}=n;return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"On this page you can find test tokens deployed on Godwoken Testnet that you can use to experiment."),(0,r.kt)("h1",{id:"tokens"},"Tokens"),(0,r.kt)("p",null,"These are ERC20 token addresses on Godwoken testnet:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"CKB: 0xE05d380839f32bC12Fb690aa6FE26B00Bd982613"),(0,r.kt)("li",{parentName:"ul"},"ETH (from Rinkeby Force Bridge): 0x0902574C86aEc810B727fD08Aa186DBC20579c08"),(0,r.kt)("li",{parentName:"ul"},"USDC (from Rinkeby Force Bridge): 0x630AcC0A29E325ce022563Df69ba7E25Eeb1e184"),(0,r.kt)("li",{parentName:"ul"},"USDT (from Rinkeby Force Bridge): 0x10A86c9C8CbE7cf2849bfCb0EaBE39b3bFEc91D4"),(0,r.kt)("li",{parentName:"ul"},"DAI (from Rinkeby Force Bridge): 0xA2370D7aFFf03e1E2FB77b28Fb65532636e0cB61"),(0,r.kt)("li",{parentName:"ul"},"USDC (from ",(0,r.kt)("a",{parentName:"li",href:"https://testnet.bridge.godwoken.io"},"https://testnet.bridge.godwoken.io"),"): 0x30D4B957139785B979aF5312d71505809dc563ed"),(0,r.kt)("li",{parentName:"ul"},"dCKB (from ",(0,r.kt)("a",{parentName:"li",href:"https://aggron.nexisdao.com/dckb"},"https://aggron.nexisdao.com/dckb"),"): 0x7e54f7324902B72334827F40f613116F06a88845")),(0,r.kt)("h3",{id:"claimable-test-erc20-token"},"Claimable Test ERC20 Token"),(0,r.kt)("p",null,"Test ERC20 token: 0xd68d7a4d5fac6E2F93449afe40865a0a91278593"),(0,r.kt)("p",null,"Code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport "@openzeppelin/contracts/token/ERC20/ERC20.sol";\n\ncontract BlockjamToken is ERC20 {\n    constructor() ERC20("Blockjam Token", "BJT") {}\n\n    mapping (address => bool) private tokenClaimers;\n\n    function claimTokens() public {\n        require(!tokenClaimers[msg.sender], "you can only claimTokens once per account");\n\n        tokenClaimers[msg.sender] = true;\n        _mint(msg.sender, 100000 * 10**18);\n    }\n\n    function hasClaimed(address account) public view returns (bool) {\n        return tokenClaimers[account];\n    }\n}\n')),(0,r.kt)("p",null,"ABI:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'[\n    {\n        "anonymous": false,\n        "inputs": [\n            {\n                "indexed": true,\n                "internalType": "address",\n                "name": "owner",\n                "type": "address"\n            },\n            {\n                "indexed": true,\n                "internalType": "address",\n                "name": "spender",\n                "type": "address"\n            },\n            {\n                "indexed": false,\n                "internalType": "uint256",\n                "name": "value",\n                "type": "uint256"\n            }\n        ],\n        "name": "Approval",\n        "type": "event"\n    },\n    {\n        "anonymous": false,\n        "inputs": [\n            {\n                "indexed": true,\n                "internalType": "address",\n                "name": "from",\n                "type": "address"\n            },\n            {\n                "indexed": true,\n                "internalType": "address",\n                "name": "to",\n                "type": "address"\n            },\n            {\n                "indexed": false,\n                "internalType": "uint256",\n                "name": "value",\n                "type": "uint256"\n            }\n        ],\n        "name": "Transfer",\n        "type": "event"\n    },\n    {\n        "inputs": [\n            {\n                "internalType": "address",\n                "name": "spender",\n                "type": "address"\n            },\n            {\n                "internalType": "uint256",\n                "name": "amount",\n                "type": "uint256"\n            }\n        ],\n        "name": "approve",\n        "outputs": [\n            {\n                "internalType": "bool",\n                "name": "",\n                "type": "bool"\n            }\n        ],\n        "stateMutability": "nonpayable",\n        "type": "function"\n    },\n    {\n        "inputs": [\n            {\n                "internalType": "address",\n                "name": "spender",\n                "type": "address"\n            },\n            {\n                "internalType": "uint256",\n                "name": "subtractedValue",\n                "type": "uint256"\n            }\n        ],\n        "name": "decreaseAllowance",\n        "outputs": [\n            {\n                "internalType": "bool",\n                "name": "",\n                "type": "bool"\n            }\n        ],\n        "stateMutability": "nonpayable",\n        "type": "function"\n    },\n    {\n        "inputs": [\n            {\n                "internalType": "address",\n                "name": "spender",\n                "type": "address"\n            },\n            {\n                "internalType": "uint256",\n                "name": "addedValue",\n                "type": "uint256"\n            }\n        ],\n        "name": "increaseAllowance",\n        "outputs": [\n            {\n                "internalType": "bool",\n                "name": "",\n                "type": "bool"\n            }\n        ],\n        "stateMutability": "nonpayable",\n        "type": "function"\n    },\n    {\n        "inputs": [\n            {\n                "internalType": "address",\n                "name": "to",\n                "type": "address"\n            },\n            {\n                "internalType": "uint256",\n                "name": "amount",\n                "type": "uint256"\n            }\n        ],\n        "name": "transfer",\n        "outputs": [\n            {\n                "internalType": "bool",\n                "name": "",\n                "type": "bool"\n            }\n        ],\n        "stateMutability": "nonpayable",\n        "type": "function"\n    },\n    {\n        "inputs": [\n            {\n                "internalType": "address",\n                "name": "from",\n                "type": "address"\n            },\n            {\n                "internalType": "address",\n                "name": "to",\n                "type": "address"\n            },\n            {\n                "internalType": "uint256",\n                "name": "amount",\n                "type": "uint256"\n            }\n        ],\n        "name": "transferFrom",\n        "outputs": [\n            {\n                "internalType": "bool",\n                "name": "",\n                "type": "bool"\n            }\n        ],\n        "stateMutability": "nonpayable",\n        "type": "function"\n    },\n    {\n        "inputs": [\n            {\n                "internalType": "string",\n                "name": "name_",\n                "type": "string"\n            },\n            {\n                "internalType": "string",\n                "name": "symbol_",\n                "type": "string"\n            }\n        ],\n        "stateMutability": "nonpayable",\n        "type": "constructor"\n    },\n    {\n        "inputs": [\n            {\n                "internalType": "address",\n                "name": "owner",\n                "type": "address"\n            },\n            {\n                "internalType": "address",\n                "name": "spender",\n                "type": "address"\n            }\n        ],\n        "name": "allowance",\n        "outputs": [\n            {\n                "internalType": "uint256",\n                "name": "",\n                "type": "uint256"\n            }\n        ],\n        "stateMutability": "view",\n        "type": "function"\n    },\n    {\n        "inputs": [\n            {\n                "internalType": "address",\n                "name": "account",\n                "type": "address"\n            }\n        ],\n        "name": "balanceOf",\n        "outputs": [\n            {\n                "internalType": "uint256",\n                "name": "",\n                "type": "uint256"\n            }\n        ],\n        "stateMutability": "view",\n        "type": "function"\n    },\n    {\n        "inputs": [],\n        "name": "decimals",\n        "outputs": [\n            {\n                "internalType": "uint8",\n                "name": "",\n                "type": "uint8"\n            }\n        ],\n        "stateMutability": "view",\n        "type": "function"\n    },\n    {\n        "inputs": [],\n        "name": "name",\n        "outputs": [\n            {\n                "internalType": "string",\n                "name": "",\n                "type": "string"\n            }\n        ],\n        "stateMutability": "view",\n        "type": "function"\n    },\n    {\n        "inputs": [],\n        "name": "symbol",\n        "outputs": [\n            {\n                "internalType": "string",\n                "name": "",\n                "type": "string"\n            }\n        ],\n        "stateMutability": "view",\n        "type": "function"\n    },\n    {\n        "inputs": [],\n        "name": "totalSupply",\n        "outputs": [\n            {\n                "internalType": "uint256",\n                "name": "",\n                "type": "uint256"\n            }\n        ],\n        "stateMutability": "view",\n        "type": "function"\n    }\n]\n')))}d.isMDXComponent=!0}}]);